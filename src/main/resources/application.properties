# spring.main.web-application-type=none
spring.main.web-application-type=servlet
server.address= localhost
# spring.main.banner-mode=console
#spring.main.banner-mode=off

# Tomcat Sever Port 변경
server.port=8080

# Tomcat Server Context 변경
server.servlet.context-path=/


#minio 스토리지 연결
minio.url=http://192.168.77.64:9000
minio.access.name=minioadmin
minio.access.secret=minioadmin

#Datasource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Seoul
#spring.datasource.url=jdbc:mysql://192.168.77.20:3306/test?serverTimezone=Asia/Seoul
spring.datasource.username=test
spring.datasource.password=test

#Mapper interface -> SqlSessionFactoryBean(구현체)
#spring JPA(JDBC -> API) -> 구현체 Hibernate : SQL Query 빌들 (자동생성)
#save(Board vo) -> insert into Board values( title, content, writer)
spring.jpa.database=mysql
#MySQL 상세지정(hibernate에게 Mysql을 쓸 것이라고 알림)


# 파일업로드 제한 
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB

#스키마 생성(create,update)
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
#create : drop -> create 순으로 진행된다.
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect


#실행되는 SQL문을 보여주기
spring.jpa.show-sql=true
#실제 JPA 구현체인 Hibernate가 동작하면서 발생하는 SQL을 포맷팅해서 출력
spring.jpa.properties.hibernate.format_sql=true

#JSP View 경로 설정
spring.mvc.view.prefix=/WEB-INF/
spring.mvc.view.suffix=.jsp
spring.mvc.static-path-pattern=/resources/**
# 스택 트레이스 출력 활성화
spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false
logging.level.org.springframework.web=TRACE
logging.level.com.bit.allsimple.controller=TRACE
logging.level.org.hibernate.SQL=TRACE
logging.level.org.hibernate.type.descriptor.sql=TRACE